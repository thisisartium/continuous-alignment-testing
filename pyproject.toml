[project]
name = "cat-ai"
version = "0.0.5-alpha"
description = "Python client for running CAT tests in a Python codebase"
authors = [
    { name = "Mike Gehard", email = "mikegehard@artium.ai" },
    { name = "Randy Lutcavich", email = "randylutcavich@artium.ai" },
    { name = "Erik Luetkehans", email = "erikluetkehans@artium.ai" },
    { name = "Paul Zabelin", email = "paulzabelin@artium.ai" },
    { name = "Tim Kersey", email = "timkersey@artium.ai" },
    { name = "Michael Harris", email = "michaelharris@artium.ai" },
]
requires-python = "~=3.13"
readme = "README.md"
dependencies = [
    # this small library should be kept independent
    # consider adding dependencies to on of the dependency groups
]
packages = [{ include = "cat_ai", from = "src" }]
license = "MIT"

[dependency-groups]
test = [
    "matplotlib>=3.10.1",
    "pytest>=8.3.4,<9",
    "pytest-asyncio>=0.21.0,<0.22",
    "mypy>=1.8.0,<2",
    "black>=24.2.0,<25",
    "pytest-snapshot>=0.9.0",
]
examples = ["openai>=1.63.2,<2", "python-dotenv>=1.0.1,<2"]
dev = [
    "sphinx>=8.1.3,<9",
    "sphinx-rtd-theme>=3.0.2,<4",
    "sphinx-markdown-builder>=0.6.8,<0.7",
    "notebook>=7.3.2",
    "pydrive2>=1.21.3,<2",
    "pydantic>=2.10.6,<3",
    "ruff>=0.9.10",
]

[tool.uv]
default-groups = ["test", "examples", "dev"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = [".", "src"]
testpaths = ["tests"]

[tool.mypy]
python_version = "3.13"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true
namespace_packages = true
explicit_package_bases = true
mypy_path = ["src"]

[tool.black]
line-length = 120
target-version = ['py313']
include = '\.pyi?$'

[tool.ruff]
# Rule selection and configuration
line-length = 100
lint.extend-ignore = ["E203"]
# Equivalent to max-complexity
lint.mccabe = { max-complexity = 10 }
exclude = [".git", "__pycache__", "build", "dist"]
